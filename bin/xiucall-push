#!/usr/bin/env sh
'use strict';

require('babel-polyfill');

var _connector = require('./connector.js');

var _connector2 = _interopRequireDefault(_connector);

var _api = require('./api.js');

var _api2 = _interopRequireDefault(_api);

var _utils = require('./utils.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mode = _utils.context.get('mode');

(0, _utils.info)('Using profile ' + _utils.context.get('NODE_ENV'));

if (mode === 'api') {
  (0, _utils.info)('Starting on api server mode.');
  var apiServer = new _api2.default();
  apiServer.start().then(function () {
    (0, _utils.info)('API server listening on ' + _utils.config.api.host + ':' + _utils.config.api.port);
  }).catch(function (err) {
    (0, _utils.error)('Failed to start api server error: ' + err);
  });
} else if (mode === 'connector') {
  (0, _utils.info)('Starting on connector mode.');
  var connectorServer = new _connector2.default();
  connectorServer.start().then(function () {
    (0, _utils.info)('Connector server listening on ' + _utils.config.connector.host + ':' + _utils.config.connector.port);
  }).catch(function (err) {
    (0, _utils.error)('Failed to start connector server error: ' + err);
  });
} else {
  (0, _utils.error)('Unkown start mode ' + mode);
  process.exit(-1);
}
